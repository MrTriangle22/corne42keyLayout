/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>
#include "mouse.dtsi"

#define NONE 0

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

&led_strip { chain-length = <27>; };
&mt { tapping-term-ms = <150>;};

/ {
    combos {
        compatible = "zmk,combos";

        toSettings {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E            &kp R       &kp T        &kp Y    &kp U      &kp I         &kp O    &kp P                      &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D            &kp F       &kp G        &kp H    &kp J      &kp K         &kp L    &mt SEMI SQT               &kp RSHFT
&kp LCTRL   &kp Z  &kp X  &kp C            &kp V       &kp B        &kp N    &kp M      &kp COMMA     &kp DOT  &mt FSLH NON_US_BACKSLASH  &kp RCTRL
                          &mt LGUI DELETE  &mo_tog 1 1 &kp SPACE    &kp RET  &mo_tog 2 2  &mt LEFT_ALT ESC
            >;
        };

        lower_layer {
            bindings = <
&kp TAB         &trans  &trans  &trans          &trans     &trans       &trans    &trans     &trans    &trans     &trans  &trans
&mt LSHIFT ESC  &trans  &trans  &trans          &trans     &trans       &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &mo 4   &kp RSHFT
&kp LCTRL       &trans  &trans  &trans          &trans     &trans       &trans    &trans     &trans    &trans     &trans  &kp RCTRL
                                &mt LALT DELETE &mo_tog 0 0  &kp SPACE    &kp RET   &mo_tog 2 2  &mt LGUI ESC
            >;
        };

        raise_layer {
            bindings = <
&kp TAB         &kp EXCLAMATION  &kp AT_SIGN  &kp HASH               &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS    &trans            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp EQUAL    &kp ASTERISK
&mt LSHIFT ESC  &kp DOLLAR       &kp PERCENT  &mt CARET CARET        &kp LBKT                &kp RBKT                 &kp KP_NUMLOCK    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINU     &kp FSLH
&kp LCTRL       &kp AMPERSAND    &kp GRAVE    &trans                 &trans                  &trans                   &mt COMMA PERIOD  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp trans    &trans
                                              &mt LGUI DELETE        &mo_tog 0 0             &kp SPACE                &kp ENTER         &mo_tog 2 2        &mt LEFT_ALT KP_NUMBER_0
            >;
        };

        settings {
            bindings = <
&kp TAB         &rgb_ug RGB_EFF  &kp C_VOL_DN    &kp C_MUTE        &kp C_VOL_UP  &rgb_ug RGB_BRI    &trans  &kp F7     &kp F8    &kp F9  &kp F12  &trans
&mt LSHIFT ESC  &bt BT_CLR       &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &rgb_ug RGB_BRD    &trans  &kp F4     &kp F5    &kp F6  &kp F11  &trans
&kp LCTRL       &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4       &trans  &kp F1     &kp F2    &kp F3  &kp F10  &trans
                                                 &mt LGUI DELETE   &mo_tog 0 0   &trans             &trans  &mo_tog 2 2  &kp LALT
            >;
        };

        MouseNormal {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans            &trans         &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &mmv MOVE_DOWN    &mmv MOVE_UP   &mmv MOVE_RIGHT   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCROLL_LEFT &msc SCROLL_DOWN  &msc SCROLL_UP &msc SCROLL_RIGHT &trans  &trans
                        &trans  &trans  &trans    &mkp MB1         &mkp MB3          &mkp MB2
            >;
        };
    };
};
