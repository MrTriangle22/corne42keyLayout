/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
};

/ {
    combos {
        compatible = "zmk,combos";

        toSettings {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Z    &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL  &kp Y  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RCTRL
                         &kp LGUI  &to 1  &kp SPACE    &kp RET  &to 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &trans  &trans  &trans    &trans  &trans       &kp BSPC  &trans    &trans        &trans     &trans  &kp DELETE
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT  &trans  &kp RSHFT
&kp LCTRL  &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans        &trans     &trans  &kp RCTRL
                           &kp LGUI  &to 0   &kp SPACE    &kp RET   &to 2     &kp LEFT_ALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCLAMATION    &kp AT_SIGN  &kp HASH                    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BSPC          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp EQUAL            &kp ESCAPE
&kp LSHFT  &mt DOLLAR DOLLAR  &kp PERCENT  &mt CARET CARET             &kp LBKT              &kp RBKT                 &kp KP_NUMLOCK    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS            &kp ASTERISK
&kp LCTRL  &kp AMPERSAND      &kp GRAVE    &mt NON_US_BACKSLASH SLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE          &mt COMMA PERIOD  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &mt F10 KP_NUMBER_0  &kp SQT
                                           &kp LGUI                    &to 0                 &kp SPACE                &kp ENTER         &to 1            &kp LEFT_ALT
            >;
        };

        settings {
            bindings = <
&kp TAB    &rgb_ug RGB_EFF  &kp C_VOL_DN    &kp C_MUTE        &kp C_VOL_UP  &rgb_ug RGB_BRI    &trans  &kp F7  &kp F8    &kp F9  &kp F12  &kp ESC
&kp LSHFT  &bt BT_CLR       &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &rgb_ug RGB_BRD    &trans  &kp F4  &kp F5    &kp F6  &kp F11  &trans
&kp LCTRL  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4       &trans  &kp F1  &kp F2    &kp F3  &kp F10  &trans
                                            &kp LGUI          &to 0         &trans             &trans  &to 2   &kp LALT
            >;
        };
    };
};
