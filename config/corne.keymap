/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include "mouse.dtsi"
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define NONE 0

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

&led_strip { chain-length = <27>; };

/ {
    combos {
        compatible = "zmk,combos";

        toSettings {
            bindings = <&to 0>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E            &kp R  &kp T        &kp Y    &kp U  &kp I             &kp O    &kp P          &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D            &kp F  &kp G        &kp H    &kp J  &kp K             &kp L    &kp SEMICOLON  &kp LSHIFT
&kp LCTRL   &kp Z  &kp X  &kp C            &kp V  &kp B        &kp N    &kp M  &kp COMMA         &kp DOT  &kp SLASH      &kp RCTRL
                          &mt LGUI DELETE  &to 1  &kp SPACE    &kp RET  &to 2  &mt LEFT_ALT ESC
            >;
        };

        lower_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp N3  &kp N4           &kp N5  &kp N6       &kp N7    &kp N8    &kp N9            &kp N0     &kp MINUS  &kp EQUAL
&kp LSHIFT    &kp GRAVE     &trans  &trans           &trans  &trans       &kp LEFT  &kp DOWN  &kp UP            &kp RIGHT  &kp APOS   &kp LEFT_SHIFT
&kp LCTRL     &trans        &trans  &trans           &trans  &trans       &trans    &trans    &kp LBKT          &kp RBKT   &kp BSLH   &kp RCTRL
                                    &mt LGUI DELETE  &to 2   &kp SPACE    &kp RET   &to 0      &mt LEFT_ALT ESC
            >;
        };

        mouse_normal {
            bindings = <
&trans  &trans  &trans  &trans           &trans  &trans       &trans             &trans             &trans            &trans            &trans  &trans
&mo 3   &trans  &trans  &trans           &trans  &trans       &mmv MOVE_X(-200)  &mmv MOVE_Y(-200)  &mmv MOVE_Y(200)  &mmv MOVE_X(200)  &trans  &trans
&mo 4   &trans  &trans  &trans           &trans  &trans       &msc MOVE_X(-10)   &msc MOVE_Y(-10)   &msc MOVE_Y(10)   &msc MOVE_Y(10)   &trans  &trans
                        &mt LGUI DELETE  &to 0   &kp SPACE    &mkp MB1           &mkp MB3           &mkp MB2
            >;
        };

        mouse_precise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans             &trans            &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(-100)  &mmv MOVE_Y(-100)  &mmv MOVE_Y(100)  &mmv MOVE_X(100)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc MOVE_X(-5)    &msc MOVE_Y(-5)    &msc MOVE_Y(5)    &msc MOVE_Y(5)    &trans  &trans
                        &trans  &trans  &trans    &trans             &trans             &trans
            >;
        };

        mouse_fast {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans             &trans            &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(-400)  &mmv MOVE_Y(-400)  &mmv MOVE_Y(400)  &mmv MOVE_X(400)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc MOVE_X(-20)   &msc MOVE_Y(-10)   &msc MOVE_Y(20)   &msc MOVE_Y(20)   &trans  &trans
                        &trans  &trans  &trans    &trans             &trans             &trans
            >;
        };

        settings {
            bindings = <
&kp TAB         &rgb_ug RGB_EFF  &kp C_VOL_DN    &kp C_MUTE        &kp C_VOL_UP  &rgb_ug RGB_BRI    &trans  &kp F7  &kp F8    &kp F9  &kp F12  &trans
&mt LSHIFT ESC  &bt BT_CLR       &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &rgb_ug RGB_BRD    &trans  &kp F4  &kp F5    &kp F6  &kp F11  &trans
&kp LCTRL       &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4       &trans  &kp F1  &kp F2    &kp F3  &kp F10  &trans
                                                 &mt LGUI DELETE   &to 0         &trans             &trans  &to 0   &kp LALT
            >;
        };
    };
};
